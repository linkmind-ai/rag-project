def get_notion_content(api_key, page_url, save_to_file=False, file_path="notion_page_content.txt"):
    """
    노션 페이지의 내용을 가져와서 반환하는 함수

    Args:
        api_key (str): 노션 API 키
        page_url (str): 노션 페이지 URL
        save_to_file (bool): 결과를 파일로 저장할지 여부
        file_path (str): 저장할 파일 경로

    Returns:
        str: 페이지 내용을 텍스트 형태로 반환
    """
    # URL에서 페이지 ID 추출
    match = re.search(r"([a-zA-Z0-9]{32})", page_url)
    if match:
        page_id = match.group(1)
    else:
        # 마지막 부분을 ID로 사용
        page_id = page_url.split("-")[-1]

    print(f"추출된 페이지 ID: {page_id}")

    # 페이지 내용 가져오기
    content = get_notion_page_content(page_id, api_key)

    if content:
        # 결과를 파일로 저장 (옵션)
        if save_to_file:
            with open(file_path, "w", encoding="utf-8") as file:
                file.write(content)
            print(f"페이지 내용이 {file_path} 파일로 저장되었습니다.")

        return content
    else:
        print("페이지 내용을 가져오는데 실패했습니다.")
        return None

def main():
    # 노션 API 키 설정
    api_key = "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"  # 여기에 발급받은 API 키를 입력하세요

    # 페이지 URL 설정
    page_url = "https://www.notion.so/Retrieval-Augmented-Generation-for-Large-Language-Models-A-Survey-1d7f6e2d24c480dda518e47a53509b63"

    # 페이지 내용 가져오기
    global content  # 전역 변수 사용 선언
    content = get_notion_content(api_key, page_url, save_to_file=True)

    # content 변수를 활용한 예시
    if content:
        # 예시 1: 내용 출력
        print("페이지 내용 미리보기:")
        print(content[:500] + "...")  # 처음 500자만 출력

        # 예시 2: 단어 수 계산
        word_count = len(content.split())
        print(f"총 단어 수: {word_count}")

        # 예시 3: 제목 추출
        headers = [line for line in content.split('\n') if line.startswith('#')]
        print("페이지 제목 구조:")
        for header in headers[:5]:  # 처음 5개 제목만 출력
            print(header)

        # 여기서 content를 다른 용도로 활용할 수 있습니다.
        # 예: 다른 함수에 전달, 텍스트 분석, 데이터 추출 등
